description: |-
  Сбор информации о проблемах шифрования с помощью sslscan и ciphersuite.info
author: vinzekatze
tags:
  - ssl
  - tls
  - info
  - web
  - https
  - ciphersuite.info

arguments:
  url:
    default:
    replacer: __URL__
    multiple: true
    description: URL целевых сайтов
  o:
    default:
      -
    replacer: __OUT__
    metavar: FILE
    description: указать путь до файла, в который отдельно будет записана сводная csv таблица с шифрами

shell: python3

mode:
  format:
    url: '{!r}'
    o: |
      with open({!r}, "w") as out_file:
          out_file.write('\n'.join(out_list))
  join:
    url: ', '

script: |-
  import subprocess, json, os
  import xml.etree.ElementTree as ET
  from urllib.request import urlopen

  targs = [__URL__]
  ciphers = {}
  out_list = []

  print_header='''##### {} #####\n'''

  for targ in targs:
      print(print_header.format(targ), flush=True)
      _ = subprocess.run(['sslscan', '--iana-names', '--xml=./sslscan_out.temp.xml', targ])
      tree = ET.parse('sslscan_out.temp.xml')
      root = tree.getroot()
      for tag in root.findall("ssltest/cipher"):
          cipher_name = tag.get("cipher")
          if ciphers.get(cipher_name, None) is None:
              ciphers[cipher_name] = {'status': '', 'sites': [targ], 'link': ''}
          elif targ not in ciphers[cipher_name]['sites']:
              ciphers[cipher_name]['sites'].append(targ)
      print()

  os.remove('./sslscan_out.temp.xml')

  print(print_header.format('Сводная CSV-таблица по шифрам (инфо с ciphersuite.info)'))

  for key in ciphers.keys():
      url = f'https://ciphersuite.info/api/cs/{key}/'
      response = urlopen(url)
      data_json = json.loads(response.read())
      ciphers[key]['status'] = data_json[key]['security']
      ciphers[key]['link'] = f'https://ciphersuite.info/cs/{key}/'
      cipher_textline = '"{}";"{}";"{}";"{}"'.format(ciphers[key]['status'], key, '\n'.join(ciphers[key]['sites']), ciphers[key]['link'])
      out_list.append(cipher_textline)
      print(cipher_textline)

  __OUT__